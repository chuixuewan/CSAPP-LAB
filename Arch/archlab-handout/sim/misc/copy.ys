#Execution begins at address 0
	.pos 0
	irmovq stack, %rsp
	call main
	halt

# Test list

.align 8
# Source block
src:
.quad 0x00a
.quad 0x0b0
.quad 0xc00
# Destination block
dest:
.quad 0x111
.quad 0x222
.quad 0x333

main:
	irmovq src,%rdi
	irmovq dest,%rsi
	irmovq $3,%rdx
	call copy_block
	ret

# long copy_block(long *src, long *dest, long len)

copy_block:
       irmovq $0,%rcx
       irmovq $1,%r9
       irmovq $0,%r8
       irmovq $8,%rbx
       jmp out
loop:
       mrmovq (%rdi),%rax
       rmmovq %rax,(%rsi)
       xorq %rax,%rcx
       subq %r9,%rdx
       addq %rbx,%rsi
       addq %rbx,%rdi
out:
         subq %r8,%rdx
         jg  loop
         rrmovq %rcx,%rax
         ret    

# Stack start here
	.pos 0x200
stack:	       
